name: "Compile and Release on Tag Push"

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-release-tag:
    runs-on: ubuntu-22.04

    steps:
      - name: "checkout"
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0 #ensure we get the tags


      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: "checkout"
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.previoustag.outputs.tag }}

      - name: Set up Go 1.24
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      - name: "compile binary linux-amd64/macos amd64 & arm64"
        run: |
          GOOS=linux GOARCH=amd64 go build -o andrew-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o andrew-linux-arm64
          GOOS=darwin GOARCH=amd64 go build -o andrew-mac-amd64
          GOOS=darwin GOARCH=arm64 go build -o andrew-mac-arm64
          GOOS=windows GOARCH=amd64 go build -o andrew-win-amd64.exe
          GOOS=windows GOARCH=arm64 go build -o andrew-win-arm64.exe

      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: Release ${{ steps.previoustag.outputs.tag }}

      - name: Upload linux amd64
        id: upload-linux-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-linux-amd64
          asset_name: andrew-linux-amd64
          asset_content_type: binary

      - name: Upload linux arm64
        id: upload-linux-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-linux-arm64
          asset_name: andrew-linux-arm64
          asset_content_type: binary

      - name: Upload macos amd64
        id: upload-macos-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-mac-amd64
          asset_name: andrew-mac-amd64
          asset_content_type: binary

      - name: Upload macos arm64
        id: upload-macos-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-mac-arm64
          asset_name: andrew-mac-arm64
          asset_content_type: binary

      - name: Upload win amd64
        id: upload-win-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-win-amd64.exe
          asset_name: andrew-win-amd64.exe
          asset_content_type: binary
      
      - name: Upload win
        id: upload-win-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./andrew-win-arm64.exe
          asset_name: andrew-win-arm64.exe
          asset_content_type: binary